import{_ as c,C as a,o as p,c as t,H as o,w as e,Q as y,k as s,a as l}from"./chunks/framework.a9ea851b.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"html/webWorkers.md","filePath":"html/webWorkers.md","lastUpdated":1694073156000}'),E={name:"html/webWorkers.md"},i=y('<h3 id="web-worker-介绍" tabindex="-1">Web Worker 介绍 <a class="header-anchor" href="#web-worker-介绍" aria-label="Permalink to &quot;Web Worker 介绍&quot;">​</a></h3><p>由于 JS 执行环境是单线程的,且 JS 主线程与 GUI 线程相互互斥,当 JS 主线程任务执行时间过长时就会阻塞 GUI 线程渲染,从而导致页面出现卡顿。在 H5 提供了 Web Worker,用于将 JS 主线程的工作转嫁给独立的实体,而不会改变现有的单线程的模型,并且 Web Worker 独立于 JS 的主执行环境,且不会它不会影响主线程的正常执行和页面 UI 的渲染。Web Worker 线程通过 postMessage 与 JS 主线程通讯。Web Worker 线程与线程的区别如下:</p><ul><li><strong>Web Worker 线程是以实际线程实现</strong>。例如,Blink 浏览器引擎实现的工作线程的 WorkerThread 就对应着底层的线程。</li><li><strong>Web Worker 线程是并行执行的</strong>。虽然页面和 Web Worker 线程都是单线程 JS 环境,但是每个环境中的指令则可以并行执行。</li><li><strong>Web Worker 线程可以共享某些内存</strong>。Web Worker 线程能够使用 SharedArrayBuffer 在多个环境中共享数据,而在传统多线程模型中,多线程具有读写共享内存空间的能力。而在传统多线程模型中线程通过锁实现并发控制,但在 JS 使用 Atomics 接口实现并发控制。</li><li><strong>Web Worker 线程不一定在同一个进程里</strong>。通常,一个进程内部可以包含多个线程。根据浏览器引擎实现,Web Worker 线程可能与页面属于同一个线程,也可能不属于,例如,Chrome 的 Blik 引擎对 SharedWorker 线程和 ServiceWorker 线程使用独立的进程。</li><li><strong>创建 Web Worker 线程的开销很大</strong>。Web Worker 线程具有独立的事件循环、全局对象、事件处理程序和其他 JS 环境必需的特性,所以创建这些结构开销比较大。通常 Web Worker 线程用于处理主线程中耗时长的 CPU 密集任务。</li></ul><h3 id="web-worker-线程类型" tabindex="-1">Web Worker 线程类型 <a class="header-anchor" href="#web-worker-线程类型" aria-label="Permalink to &quot;Web Worker 线程类型&quot;">​</a></h3><p>Web Worker 线程规范中定义了三种主要的 Web Worker 线程:专用工作者线(Dedicated Workers)、共享工作者线程(SharedWorkders)、服务工作者线程(ServiceWorkers)。除此之外 Web Worker 还包含 Chrome Workers 和 Audio Workers。</p><ul><li><p><strong>Dedicated Workers(专用工作者线程)</strong>:Dedicated Workers 通常简称为工作者线程、Web Worker 或 Worker,可以让脚本单独创建一个 JS 线程,从而执行委托的任务。注意:专用工作者线程只能被创建它的页面使用。</p></li><li><p><strong>SharedWorkders(共享工作者线程)</strong>:SharedWorkders 与 Dedicated Workers 非常相似,其主要区别在于 SharedWorkders 可以被多个不同的上下文使用,包括不同的页面及任何与创建 SharedWorkders 线程的脚本同源的脚本,它们都可以向 SharedWorkders 线程发送消息或从中接收消息。</p></li><li><p><strong>ServiceWorkers(服务工作者线程)</strong>:ServiceWorkers 一般作为 web 应用程序、浏览器和网络之前的代理服务器。ServiceWorkers 旨在(除开其他方面)创建有效的离线体验,例如:拦截网络请求、根据网络是否可用采取合适的行动并更新驻留在服务器上的资源、推送通知、后台同步 API。</p></li><li><p>Chrome Workers(谷歌工作者线程):是一种仅适用于 firefox 的 worker。</p></li><li><p>Audio Workers(音频工作者线程):允许在 web worker 上下文中直接完成脚本化音频处理。</p></li></ul><p>在 Web Workers 环境中,全局对象并不是 window 对象,而 WorkerGlobalScope 实例,通过 self 关键字暴露。self 对象暴露的大部分方法都是 window 上方法的子集,所以操作都是与 window 对象类似的。</p><h4 id="dedicated-workers-专用工作者线程" tabindex="-1">Dedicated Workers(专用工作者线程) <a class="header-anchor" href="#dedicated-workers-专用工作者线程" aria-label="Permalink to &quot;Dedicated Workers(专用工作者线程)&quot;">​</a></h4><p>使用专用工作者线程的注意事项如下:</p><ul><li>专用工作者线程可以指定脚本的 URI 或者在 Worker 线程中通过<code>importScripts()</code>将一个或多个脚本同步导入到 Worker,<code>importScripts()</code>只能在 Web Worker 环境中使用。</li><li>专用工作者线程只能加载与父页面同源的脚本文件,加载其他源会导致工作者线程加载错误,可以通过 Worker 的<code>onerror</code>事件监听脚本加载错误和执行错误。</li><li>专用工作者线程的 self 是一个 DedicatedWorkerGlobalScope 对象,DedicatedWorkerGlobalScope 是自 WorkerGlobalScope 的子类。专用工作者线程和脚本文件可以通过 PostMessage 相互通信,主线程可以通过<code>onmessage</code>事件监听 Worker 线程发送的数据,Worker 线程也可以通过 self 的<code>onmessage</code>事件监听主线程线程的数据。主线程与 Worker 线程的数据传递是通过拷贝来完成,而非共享内存,所以传递给 worker 的对象需要经过序列化,接下来在另一端还需要反序列化。</li></ul><p><strong>postMessage</strong> 是 html5 引入的 API,postMessage()方法允许来自不同源的脚本采用异步方式进行有效的通信,可以实现跨文本文档,多窗口,跨域消息传递,用于多窗口间数据通信,这也使它成为跨域通信的一种有效的解决方案。postMessage 的使用场景如下:</p><ul><li>跨域通信。JSONP 是解决跨域方式中的其中一种,JSONP 通过 srcipt 标签的 src 属性向后端发起请求,服务端定义一个回调函数并将响应结果作为回调函数的入参返回至客户端,客户端执行该回调函数通过函数入参就能获取服务端响应结果。JSONP 只支持 GET 请求,不支持 POST 请求,而 postMessage()即支持 GET 请求跨域,又支持 POST 请求跨域。</li><li>WebWorker 与主线程的通讯。postMessage()支持 WebWorker 与主线程相互传递数据,通过监听<code>onmessage</code>事件可以接收 postMessage()发送的数据。</li><li>多窗口数据通信。postMessage()可以在多个 iframe 相互传递数据。</li></ul>',12),k=s("div",{class:"language-js vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"/**")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * self是Web Worker环境中的全局对象,在专用工作者线程中self")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * 是一个DedicatedWorkerGlobalScope对象。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * DedicatedWorkerGlobalScope{")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  cancelAnimationFrame:()=>{ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 用于关闭工作者线程")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  close(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 工作者线程名称")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},' *  name:"",')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 用于监听主线程通过Worker实例的PostMessage发送的数据")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  onmessage(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 当Worker收到无法反序列化的消息时触发")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  onmessageerror(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 用于向主线程发送消息,如果消息是对象则需要序列化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  postMessage(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," */")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"(self);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// 通过importScripts()加载多个脚本文件,importScripts()只能用于Web Worker环境中")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"importScripts"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#9ECBFF"}},'"./script01.js"'),s("span",{style:{color:"#E1E4E8"}},", "),s("span",{style:{color:"#9ECBFF"}},'"./script02.js"'),s("span",{style:{color:"#E1E4E8"}},"); "),s("span",{style:{color:"#6A737D"}},'// "script01 task" "script02 task"')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// 监听主线程使用Worker实例通过postMessage()发送数据,e是一个MessageEvent对象")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"self."),s("span",{style:{color:"#B392F0"}},"onmessage"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," ("),s("span",{style:{color:"#FFAB70"}},"e"),s("span",{style:{color:"#E1E4E8"}},") "),s("span",{style:{color:"#F97583"}},"=>"),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#79B8FF"}},"JSON"),s("span",{style:{color:"#E1E4E8"}},"."),s("span",{style:{color:"#B392F0"}},"parse"),s("span",{style:{color:"#E1E4E8"}},"(e.data)); "),s("span",{style:{color:"#6A737D"}},"// {message: 'worker i love you!'}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"};")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// 监听Worker线程收到无法反序列化的消息时触发")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"self."),s("span",{style:{color:"#B392F0"}},"onmessageerror"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," ("),s("span",{style:{color:"#FFAB70"}},"e"),s("span",{style:{color:"#E1E4E8"}},") "),s("span",{style:{color:"#F97583"}},"=>"),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"(e);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"};")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F97583"}},"const"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#B392F0"}},"sendMessage"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," () "),s("span",{style:{color:"#F97583"}},"=>"),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#F97583"}},"const"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"data"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    type: "),s("span",{style:{color:"#9ECBFF"}},'"worker"'),s("span",{style:{color:"#E1E4E8"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    message: "),s("span",{style:{color:"#9ECBFF"}},'"hello web worker"'),s("span",{style:{color:"#E1E4E8"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  };")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#6A737D"}},"// 发送引用类型需要进行序列化,另一端需要反序列化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#B392F0"}},"postMessage"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#79B8FF"}},"JSON"),s("span",{style:{color:"#E1E4E8"}},"."),s("span",{style:{color:"#B392F0"}},"stringify"),s("span",{style:{color:"#E1E4E8"}},"(data));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"sendMessage"),s("span",{style:{color:"#E1E4E8"}},"();")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"/**")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * self是Web Worker环境中的全局对象,在专用工作者线程中self")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * 是一个DedicatedWorkerGlobalScope对象。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * DedicatedWorkerGlobalScope{")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  cancelAnimationFrame:()=>{ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 用于关闭工作者线程")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  close(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 工作者线程名称")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},' *  name:"",')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 用于监听主线程通过Worker实例的PostMessage发送的数据")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  onmessage(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 当Worker收到无法反序列化的消息时触发")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  onmessageerror(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  // 用于向主线程发送消息,如果消息是对象则需要序列化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," *  postMessage(){ //... },")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," * }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}}," */")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"(self);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// 通过importScripts()加载多个脚本文件,importScripts()只能用于Web Worker环境中")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"importScripts"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#032F62"}},'"./script01.js"'),s("span",{style:{color:"#24292E"}},", "),s("span",{style:{color:"#032F62"}},'"./script02.js"'),s("span",{style:{color:"#24292E"}},"); "),s("span",{style:{color:"#6A737D"}},'// "script01 task" "script02 task"')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// 监听主线程使用Worker实例通过postMessage()发送数据,e是一个MessageEvent对象")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"self."),s("span",{style:{color:"#6F42C1"}},"onmessage"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," ("),s("span",{style:{color:"#E36209"}},"e"),s("span",{style:{color:"#24292E"}},") "),s("span",{style:{color:"#D73A49"}},"=>"),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#005CC5"}},"JSON"),s("span",{style:{color:"#24292E"}},"."),s("span",{style:{color:"#6F42C1"}},"parse"),s("span",{style:{color:"#24292E"}},"(e.data)); "),s("span",{style:{color:"#6A737D"}},"// {message: 'worker i love you!'}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"};")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"// 监听Worker线程收到无法反序列化的消息时触发")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"self."),s("span",{style:{color:"#6F42C1"}},"onmessageerror"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," ("),s("span",{style:{color:"#E36209"}},"e"),s("span",{style:{color:"#24292E"}},") "),s("span",{style:{color:"#D73A49"}},"=>"),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"(e);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"};")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49"}},"const"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#6F42C1"}},"sendMessage"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," () "),s("span",{style:{color:"#D73A49"}},"=>"),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#D73A49"}},"const"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"data"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    type: "),s("span",{style:{color:"#032F62"}},'"worker"'),s("span",{style:{color:"#24292E"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    message: "),s("span",{style:{color:"#032F62"}},'"hello web worker"'),s("span",{style:{color:"#24292E"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  };")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#6A737D"}},"// 发送引用类型需要进行序列化,另一端需要反序列化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#6F42C1"}},"postMessage"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#005CC5"}},"JSON"),s("span",{style:{color:"#24292E"}},"."),s("span",{style:{color:"#6F42C1"}},"stringify"),s("span",{style:{color:"#24292E"}},"(data));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"sendMessage"),s("span",{style:{color:"#24292E"}},"();")])])])],-1),d=s("div",{class:"language-html vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"html"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"<"),s("span",{style:{color:"#85E89D"}},"script"),s("span",{style:{color:"#E1E4E8"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#6A737D"}},"/**")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * Worker接收执行的脚本的URL和配置项(可选)两个参数,配置项包含如下配置:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * type:用以指定 worker 类型的 DOMString 值,该值可以是 classic 或 module,")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * 如果未指定,将使用默认值 classic。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   *")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * credentials:用以指定 worker 凭证的 DOMString 值,该值可以是 omit、")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * same-origin、include。如果未指定,或者type是classic,将使用默认值omit(不要求凭证)。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   *")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * name:在 DedicatedWorkerGlobalScope 的情况下,用来表示 worker 的 scope")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * 的一个 DOMString 值,主要用于调试目的。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   */")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#F97583"}},"const"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#79B8FF"}},"worker"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"new"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#B392F0"}},"Worker"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#9ECBFF"}},'"./worker.js"'),s("span",{style:{color:"#E1E4E8"}},", { name: "),s("span",{style:{color:"#9ECBFF"}},'"worker01"'),s("span",{style:{color:"#E1E4E8"}}," });")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#6A737D"}},"// 监听脚本文件通过postMessage()发送的数据,e是一个MessageEvent对象")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  worker."),s("span",{style:{color:"#B392F0"}},"onmessage"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," ("),s("span",{style:{color:"#FFAB70"}},"e"),s("span",{style:{color:"#E1E4E8"}},") "),s("span",{style:{color:"#F97583"}},"=>"),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#6A737D"}},"// {type: 'worker', message: 'hello web worker'}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#79B8FF"}},"JSON"),s("span",{style:{color:"#E1E4E8"}},"."),s("span",{style:{color:"#B392F0"}},"parse"),s("span",{style:{color:"#E1E4E8"}},"(e.data));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#6A737D"}},"// 主线程向Worker线程发送数据")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    worker."),s("span",{style:{color:"#B392F0"}},"postMessage"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#79B8FF"}},"JSON"),s("span",{style:{color:"#E1E4E8"}},"."),s("span",{style:{color:"#B392F0"}},"stringify"),s("span",{style:{color:"#E1E4E8"}},"({ message: "),s("span",{style:{color:"#9ECBFF"}},'"worker i love you!"'),s("span",{style:{color:"#E1E4E8"}}," }));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  };")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#6A737D"}},"// 监听运行脚本时产生的错误,e是一个ErrorEvent对象")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  worker."),s("span",{style:{color:"#B392F0"}},"onerror"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#F97583"}},"="),s("span",{style:{color:"#E1E4E8"}}," ("),s("span",{style:{color:"#FFAB70"}},"e"),s("span",{style:{color:"#E1E4E8"}},") "),s("span",{style:{color:"#F97583"}},"=>"),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"(e);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  };")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  "),s("span",{style:{color:"#B392F0"}},"setTimeout"),s("span",{style:{color:"#E1E4E8"}},"(() "),s("span",{style:{color:"#F97583"}},"=>"),s("span",{style:{color:"#E1E4E8"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    "),s("span",{style:{color:"#6A737D"}},"// 在主线程中终止Worker线程,也可以在Worker线程调用close()关闭Worker线程")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"    worker."),s("span",{style:{color:"#B392F0"}},"terminate"),s("span",{style:{color:"#E1E4E8"}},"();")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"  }, "),s("span",{style:{color:"#79B8FF"}},"3000"),s("span",{style:{color:"#E1E4E8"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"</"),s("span",{style:{color:"#85E89D"}},"script"),s("span",{style:{color:"#E1E4E8"}},">")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"<"),s("span",{style:{color:"#22863A"}},"script"),s("span",{style:{color:"#24292E"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#6A737D"}},"/**")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * Worker接收执行的脚本的URL和配置项(可选)两个参数,配置项包含如下配置:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * type:用以指定 worker 类型的 DOMString 值,该值可以是 classic 或 module,")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * 如果未指定,将使用默认值 classic。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   *")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * credentials:用以指定 worker 凭证的 DOMString 值,该值可以是 omit、")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * same-origin、include。如果未指定,或者type是classic,将使用默认值omit(不要求凭证)。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   *")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * name:在 DedicatedWorkerGlobalScope 的情况下,用来表示 worker 的 scope")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   * 的一个 DOMString 值,主要用于调试目的。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A737D"}},"   */")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#D73A49"}},"const"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#005CC5"}},"worker"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"new"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#6F42C1"}},"Worker"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#032F62"}},'"./worker.js"'),s("span",{style:{color:"#24292E"}},", { name: "),s("span",{style:{color:"#032F62"}},'"worker01"'),s("span",{style:{color:"#24292E"}}," });")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#6A737D"}},"// 监听脚本文件通过postMessage()发送的数据,e是一个MessageEvent对象")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  worker."),s("span",{style:{color:"#6F42C1"}},"onmessage"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," ("),s("span",{style:{color:"#E36209"}},"e"),s("span",{style:{color:"#24292E"}},") "),s("span",{style:{color:"#D73A49"}},"=>"),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6A737D"}},"// {type: 'worker', message: 'hello web worker'}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#005CC5"}},"JSON"),s("span",{style:{color:"#24292E"}},"."),s("span",{style:{color:"#6F42C1"}},"parse"),s("span",{style:{color:"#24292E"}},"(e.data));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6A737D"}},"// 主线程向Worker线程发送数据")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    worker."),s("span",{style:{color:"#6F42C1"}},"postMessage"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#005CC5"}},"JSON"),s("span",{style:{color:"#24292E"}},"."),s("span",{style:{color:"#6F42C1"}},"stringify"),s("span",{style:{color:"#24292E"}},"({ message: "),s("span",{style:{color:"#032F62"}},'"worker i love you!"'),s("span",{style:{color:"#24292E"}}," }));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  };")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#6A737D"}},"// 监听运行脚本时产生的错误,e是一个ErrorEvent对象")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  worker."),s("span",{style:{color:"#6F42C1"}},"onerror"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#D73A49"}},"="),s("span",{style:{color:"#24292E"}}," ("),s("span",{style:{color:"#E36209"}},"e"),s("span",{style:{color:"#24292E"}},") "),s("span",{style:{color:"#D73A49"}},"=>"),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"(e);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  };")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  "),s("span",{style:{color:"#6F42C1"}},"setTimeout"),s("span",{style:{color:"#24292E"}},"(() "),s("span",{style:{color:"#D73A49"}},"=>"),s("span",{style:{color:"#24292E"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    "),s("span",{style:{color:"#6A737D"}},"// 在主线程中终止Worker线程,也可以在Worker线程调用close()关闭Worker线程")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"    worker."),s("span",{style:{color:"#6F42C1"}},"terminate"),s("span",{style:{color:"#24292E"}},"();")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"  }, "),s("span",{style:{color:"#005CC5"}},"3000"),s("span",{style:{color:"#24292E"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"</"),s("span",{style:{color:"#22863A"}},"script"),s("span",{style:{color:"#24292E"}},">")])])])],-1),W=s("div",{class:"language-js vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#9ECBFF"}},'"script01 task"'),s("span",{style:{color:"#E1E4E8"}},");")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#032F62"}},'"script01 task"'),s("span",{style:{color:"#24292E"}},");")])])])],-1),g=s("div",{class:"language-js vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki github-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#E1E4E8"}},"console."),s("span",{style:{color:"#B392F0"}},"log"),s("span",{style:{color:"#E1E4E8"}},"("),s("span",{style:{color:"#9ECBFF"}},'"script02 task"'),s("span",{style:{color:"#E1E4E8"}},");")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#24292E"}},"console."),s("span",{style:{color:"#6F42C1"}},"log"),s("span",{style:{color:"#24292E"}},"("),s("span",{style:{color:"#032F62"}},'"script02 task"'),s("span",{style:{color:"#24292E"}},");")])])])],-1);function D(A,F,m,h,b,C){const n=a("CodeGroupItem"),r=a("CodeGroup");return p(),t("div",null,[i,o(r,null,{default:e(()=>[o(n,{title:"worker.js",active:""},{default:e(()=>[k]),_:1}),o(n,{title:"index.html"},{default:e(()=>[d]),_:1}),o(n,{title:"script01.js"},{default:e(()=>[W]),_:1}),o(n,{title:"script02.js"},{default:e(()=>[g]),_:1})]),_:1})])}const S=c(E,[["render",D]]);export{w as __pageData,S as default};
