import{_ as a,o as e,c as i,Q as l}from"./chunks/framework.a9ea851b.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"engineering/babel/plugin.md","filePath":"engineering/babel/plugin.md","lastUpdated":1694587313000}'),n={name:"engineering/babel/plugin.md"},s=l('<p>在开发中一般很少单独使用 Babel 的 api,更多是将功能进行封装成插件,插件可以上传至 npm 仓库进行复用。</p><h2 id="plugin" tabindex="-1">Plugin <a class="header-anchor" href="#plugin" aria-label="Permalink to &quot;Plugin&quot;">​</a></h2><p>Babel 配置文件中通过 plugins 选项配置插件,plugins 的值可以是字符串或者数组,例如:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span></code></pre></div><h3 id="plugin-格式" tabindex="-1">Plugin 格式 <a class="header-anchor" href="#plugin-格式" aria-label="Permalink to &quot;Plugin 格式&quot;">​</a></h3><p>Plugin 的格式分为返回对象的函数和返回对象两种。</p><h4 id="_3-1-1-返回对象的函数" tabindex="-1">3.1.1 返回对象的函数 <a class="header-anchor" href="#_3-1-1-返回对象的函数" aria-label="Permalink to &quot;3.1.1 返回对象的函数&quot;">​</a></h4><p>Babel Plugin 第一种形式是返回一个函数,该函数需要返回一个对象,对象应包含 visitor、pre、post、inherits、manipulateOptions 等属性。</p><h4 id="_3-1-2-返回对象" tabindex="-1">3.1.2 返回对象 <a class="header-anchor" href="#_3-1-2-返回对象" aria-label="Permalink to &quot;3.1.2 返回对象&quot;">​</a></h4><p>Babel Plugin 第二种形式是直接返回一个对象,这种方式用于不需要处理参数的情况。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span></code></pre></div><h3 id="自定义-plugin-去除-console-log" tabindex="-1">自定义 Plugin 去除 console.log() <a class="header-anchor" href="#自定义-plugin-去除-console-log" aria-label="Permalink to &quot;自定义 Plugin 去除 console.log()&quot;">​</a></h3><h2 id="preset" tabindex="-1">preset <a class="header-anchor" href="#preset" aria-label="Permalink to &quot;preset&quot;">​</a></h2>',13),t=[s];function o(p,r,c,d,h,u){return e(),i("div",null,t)}const b=a(n,[["render",o]]);export{_ as __pageData,b as default};
